name: Build and Test CVRP Genetic Algorithm

# Disabled to avoid conflicts with cvrp-solver.yml
on:
  workflow_dispatch:  # Manual trigger only
  # push:
  #   branches: [ main, develop ]
  # pull_request:
  #   branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup C++ environment
      run: |
        sudo apt-get update
        sudo apt-get install -y g++ build-essential
        g++ --version
        
    - name: Compile GA program
      run: |
        g++ -std=c++17 -O2 -o ga8 ga8.cpp
        echo "‚úÖ Compilation successful"
        
    - name: Verify executable
      run: |
        ls -la ga8
        file ga8
        
    - name: Test with sample data
      run: |
        if [ -f "CMT1.vrp" ]; then
          echo "üìä Testing GA with CMT1.vrp..."
          timeout 60s ./ga8 || true
          echo "‚úÖ GA execution completed"
        else
          echo "‚ö†Ô∏è CMT1.vrp not found, skipping execution test"
        fi
        
    - name: Check results
      run: |
        if [ -f "ga_results.csv" ]; then
          echo "üìà Results generated:"
          cat ga_results.csv
        else
          echo "‚ÑπÔ∏è No results file generated"
        fi
        
    - name: Upload results as artifact
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: ga-results
        path: |
          ga8
          ga_results.csv
        retention-days: 30

  build-multiple-platforms:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup C++ (Windows)
      if: matrix.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        install: mingw-w64-x86_64-gcc
        
    - name: Compile GA (Linux/macOS)
      if: matrix.os != 'windows-latest'
      run: |
        g++ -std=c++17 -O2 -o ga8 ga8.cpp
        echo "‚úÖ Compilation successful on ${{ matrix.os }}"
        
    - name: Compile GA (Windows)
      if: matrix.os == 'windows-latest'
      shell: msys2 {0}
      run: |
        g++ -std=c++17 -O2 -o ga8.exe ga8.cpp
        echo "‚úÖ Compilation successful on Windows"
        
    - name: Upload executable
      uses: actions/upload-artifact@v3
      with:
        name: ga-executable-${{ matrix.os }}
        path: |
          ga8*
        retention-days: 7