name: CVRP Solver Runner

on:
  workflow_dispatch:
    inputs:
      instance:
        description: 'Ch·ªçn file CMT ƒë·ªÉ ch·∫°y'
        required: true
        type: choice
        options:
          - CMT1
          - CMT2
          - CMT3
          - CMT4
          - CMT5
        default: 'CMT4'
      runs:
        description: 'S·ªë l·∫ßn ch·∫°y'
        required: true
        default: '5'
        type: string
      generations:
        description: 'S·ªë th·∫ø h·ªá (Max Generations)'
        required: true
        default: '1000'
        type: string
      population:
        description: 'K√≠ch th∆∞·ªõc qu·∫ßn th·ªÉ (Population Size)'
        required: true
        default: '500'
        type: string

jobs:
  run-cvrp:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup C++ environment
      run: |
        sudo apt-get update
        sudo apt-get install -y g++ make
        
    - name: Setup VRP files
      run: |
        echo "Copying VRP files from parent directory..."
        ls -la ../
        cp ../*.vrp . || echo "No VRP files found in parent, continuing..."
        ls -la *.vrp || echo "No VRP files available"
        
    - name: Compile CVRP Solver
      run: |
        g++ -std=c++17 -O3 -o cvrp_solver ga8.cpp
        ls -la cvrp_solver
        
    - name: Display run configuration
      run: |
        echo "üöõ CVRP Solver Configuration"
        echo "=================================="
        echo "File: ${{ inputs.instance }}.vrp"
        echo "S·ªë l·∫ßn ch·∫°y: ${{ inputs.runs }}"
        echo "Generations: ${{ inputs.generations }}"
        echo "Population: ${{ inputs.population }}"
        echo "=================================="
        
    - name: Run CVRP Solver
      run: |
        echo "üöÄ B·∫Øt ƒë·∫ßu ch·∫°y ${{ inputs.instance }}.vrp v·ªõi ${{ inputs.runs }} l·∫ßn..."
        
        if [ -f "${{ inputs.instance }}.vrp" ]; then
          ./cvrp_solver "${{ inputs.instance }}.vrp" "${{ inputs.generations }}" "${{ inputs.population }}" "${{ inputs.runs }}"
        else
          echo "‚ùå Kh√¥ng t√¨m th·∫•y file ${{ inputs.instance }}.vrp"
          echo "üìÅ Available files:"
          ls -la *.vrp
          exit 1
        fi
        
    - name: Show results
      run: |
        echo "üìä K·∫æT QU·∫¢ CH·∫†Y XONG:"
        echo "===================="
        
        if [ -f ga_results.csv ]; then
          echo "‚úÖ Results CSV ƒë√£ ƒë∆∞·ª£c t·∫°o:"
          echo ""
          cat ga_results.csv
          echo ""
          echo "üìà Th·ªëng k√™:"
          echo "- File: ${{ inputs.instance }}.vrp"
          echo "- S·ªë l·∫ßn ch·∫°y: ${{ inputs.runs }}"
          echo "- Population: ${{ inputs.population }}"
          echo "- Generations: ${{ inputs.generations }}"
        else
          echo "‚ùå Kh√¥ng c√≥ file k·∫øt qu·∫£"
        fi
        
    - name: Upload results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cvrp-results-${{ inputs.instance }}-runs${{ inputs.runs }}
        path: |
          ga_results.csv
          *.log
        retention-days: 30